"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[126],{3905:function(t,e,r){r.d(e,{Zo:function(){return l},kt:function(){return p}});var n=r(7294);function o(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function a(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function c(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?a(Object(r),!0).forEach((function(e){o(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function s(t,e){if(null==t)return{};var r,n,o=function(t,e){if(null==t)return{};var r,n,o={},a=Object.keys(t);for(n=0;n<a.length;n++)r=a[n],e.indexOf(r)>=0||(o[r]=t[r]);return o}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(n=0;n<a.length;n++)r=a[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(o[r]=t[r])}return o}var i=n.createContext({}),u=function(t){var e=n.useContext(i),r=e;return t&&(r="function"==typeof t?t(e):c(c({},e),t)),r},l=function(t){var e=u(t.components);return n.createElement(i.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},d=n.forwardRef((function(t,e){var r=t.components,o=t.mdxType,a=t.originalType,i=t.parentName,l=s(t,["components","mdxType","originalType","parentName"]),d=u(r),p=o,f=d["".concat(i,".").concat(p)]||d[p]||m[p]||a;return r?n.createElement(f,c(c({ref:e},l),{},{components:r})):n.createElement(f,c({ref:e},l))}));function p(t,e){var r=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var a=r.length,c=new Array(a);c[0]=d;var s={};for(var i in e)hasOwnProperty.call(e,i)&&(s[i]=e[i]);s.originalType=t,s.mdxType="string"==typeof t?t:o,c[1]=s;for(var u=2;u<a;u++)c[u]=r[u];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},9163:function(t,e,r){r.r(e),r.d(e,{assets:function(){return l},contentTitle:function(){return i},default:function(){return p},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return m}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),c=["components"],s={id:"custom_extractors",title:"Custom extractors"},i="Custom extractors",u={unversionedId:"extractor_model/custom_extractors",id:"extractor_model/custom_extractors",title:"Custom extractors",description:"Comet defines the",source:"@site/../comet-docs/target/mdoc/3-extractor_model/custom_extractors.md",sourceDirName:"3-extractor_model",slug:"/extractor_model/custom_extractors",permalink:"/comet/docs/extractor_model/custom_extractors",editUrl:"https://github.com/ulitol97/comet/tree/main/packages/create-docusaurus/templates/shared/../comet-docs/target/mdoc/3-extractor_model/custom_extractors.md",tags:[],version:"current",frontMatter:{id:"custom_extractors",title:"Custom extractors"},sidebar:"docsSidebar",previous:{title:"Pre-defined extractors",permalink:"/comet/docs/extractor_model/predefined_extractors"},next:{title:"Pre-defined errors",permalink:"/comet/docs/error_handling/predefined_errors"}},l={},m=[{value:"Defining custom extractors",id:"defining-custom-extractors",level:2},{value:"Assertions and constraints",id:"assertions-and-constraints",level:3}],d={toc:m};function p(t){var e=t.components,r=(0,o.Z)(t,c);return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"custom-extractors"},"Custom extractors"),(0,a.kt)("p",null,"Comet defines the\nabstract ",(0,a.kt)("em",{parentName:"p"},(0,a.kt)("a",{parentName:"em",href:"https://ulitol97.github.io/comet/scaladoc/org/ragna/comet/stream/extractors/StreamExtractor.html"},"StreamExtractor")),"\nclass from which all extractors are derived."),(0,a.kt)("h2",{id:"defining-custom-extractors"},"Defining custom extractors"),(0,a.kt)("p",null,"In order to define your custom data extractors to feed validators, you must\noverride, at least, all non-implemented members of the abstract class:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("u",null,"source"),": String constant identifying this type of stream."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("u",null,"inputStream"),": The stream of RDF data that enters this extractor.")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"It is highly encouraged to use the pre-defined extractors as reference for\ndefining new custom ones.")),(0,a.kt)("h3",{id:"assertions-and-constraints"},"Assertions and constraints"),(0,a.kt)("p",null,"The ",(0,a.kt)("em",{parentName:"p"},"StreamExtractor")," class provides a method ",(0,a.kt)("inlineCode",{parentName:"p"},"checkConfiguration")," that is\nautomatically called on instance creation."),(0,a.kt)("p",null,"This method tests that the extractor configuration is correct. It may be\noverridden or extended with further checks that suit the needs of the new\nextractor."))}p.isMDXComponent=!0}}]);