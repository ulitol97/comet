"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[806],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return d}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(r),d=a,f=p["".concat(s,".").concat(d)]||p[d]||m[d]||o;return r?n.createElement(f,i(i({ref:t},c),{},{components:r})):n.createElement(f,i({ref:t},c))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},2749:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return m}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),i=["components"],l={id:"predefined_extractors",title:"Pre-defined extractors"},s="Pre-defined extractors",u={unversionedId:"extractor_model/predefined_extractors",id:"extractor_model/predefined_extractors",title:"Pre-defined extractors",description:"Command Reference",source:"@site/../comet-docs/target/mdoc/3-extractor_model/predefined_extractors.md",sourceDirName:"3-extractor_model",slug:"/extractor_model/predefined_extractors",permalink:"/comet/docs/extractor_model/predefined_extractors",editUrl:"https://github.com/ulitol97/comet/tree/main/packages/create-docusaurus/templates/shared/../comet-docs/target/mdoc/3-extractor_model/predefined_extractors.md",tags:[],version:"current",frontMatter:{id:"predefined_extractors",title:"Pre-defined extractors"},sidebar:"docsSidebar",previous:{title:"Validation results",permalink:"/comet/docs/validators/validator_results"},next:{title:"Custom extractors",permalink:"/comet/docs/extractor_model/custom_extractors"}},c={},m=[{value:"Command Reference",id:"command-reference",level:2},{value:"Verbosity levels",id:"verbosity-levels",level:2},{value:"JVM Custom Arguments",id:"jvm-custom-arguments",level:2},{value:"Examples",id:"examples",level:2}],p={toc:m};function d(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"pre-defined-extractors"},"Pre-defined extractors"),(0,o.kt)("h2",{id:"command-reference"},"Command Reference"),(0,o.kt)("p",null,"Comet's CLI currently supports the following launch-arguments:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"--https")," Attempt to serve the API via HTTPS (default is false), searching for certificates as specified in the current environment."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"-p, --port"),"  Port in which the API will listen for requests. Values must be in range 1-65535 (default is 8080)."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"-s, --silent"),"  Enable silent mode in order not to log any output to console (default is false)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"-v, --verbose")," Show additional logging information (use cumulative times for additional info, like: ",(0,o.kt)("inlineCode",{parentName:"li"},"-vvv"),") "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"--version")," Print the version of the program"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"--help")," Print the help menu")),(0,o.kt)("h2",{id:"verbosity-levels"},"Verbosity levels"),(0,o.kt)("p",null,"When using the ",(0,o.kt)("inlineCode",{parentName:"p"},"-v, --verbose")," CLI argument, the following logging messages are shown on console at each time:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"No verbose argument")," ",(0,o.kt)("strong",{parentName:"li"},"ERROR")," level messages"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"-v")," ",(0,o.kt)("strong",{parentName:"li"},"WARN")," level messages and upwards"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"-vv")," ",(0,o.kt)("strong",{parentName:"li"},"INFO")," level messages and upwards (includes client connections and requests)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"-vvv")," ",(0,o.kt)("strong",{parentName:"li"},"DEBUG")," level messages and upwards")),(0,o.kt)("h2",{id:"jvm-custom-arguments"},"JVM Custom Arguments"),(0,o.kt)("p",null,"In case Comet is having trouble to generate permalinks due to an SSL issue, try adding the following argument:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"-Djdk.tls.client.protocols=TLSv1.2"))),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Launching Comet in port 8081:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"rdfshape -p 8081"))),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Launching Comet in port 80, try to use the HTTPS configuration from the environment:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"rdfshape -p 80 --https"))),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"Launching Comet in port 8080, with the maximum verbosity level:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"rdfshape -vvv"))))}d.isMDXComponent=!0}}]);